plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '6.0.1.5171'
	id 'jacoco'
}

group = 'com.assessment'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.6.3'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'
	implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '10.0.2'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.6.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

sonar {
	properties {
		property "sonar.projectKey", "sofmillan_assessment-events"
		property "sonar.organization", "sofmillan"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

jacocoTestReport {
	reports {
		xml.required.set(true)
	}
	dependsOn test
}

test {
	finalizedBy jacocoTestReport
}

tasks.named('sonar').configure {
	dependsOn jacocoTestReport
}